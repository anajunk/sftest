<Application
	x:Class="New_SF_IT.App" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:local="clr-namespace:New_SF_IT">
	<Application.Resources>
		<ResourceDictionary>
			<Style
				x:Key="CustomFont">
				<Setter
					Property="FontFamily"
					Value="/font/#SourceSansPro-Regular" />
			</Style>
			<Style
				TargetType="{x:Type Button}"
				x:Key="CustomButtonStyle">
				<Setter
					Property="Background"
					Value="#99BC85" />
				<Setter
					Property="Foreground"
					Value="#FFFFFFFF" />
				<Setter
					Property="Width"
					Value="120" />
				<Setter
					Property="Height"
					Value="25" />
				<Setter
					Property="FontSize"
					Value="15" />
				<Setter
					Property="Template">
					<Setter.Value>
						<ControlTemplate
							TargetType="{x:Type Button}">
							<Border
								Name="border"
								Background="{TemplateBinding Background}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								CornerRadius="5">
								<ContentPresenter
									HorizontalAlignment="Center"
									VerticalAlignment="Center" />
							</Border>
							<ControlTemplate.Triggers>
								<Trigger
									Property="UIElement.IsMouseOver"
									Value="True">
									<Setter
										TargetName="border"
										Property="Background"
										Value="#A7D397" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style
				TargetType="{x:Type Button}"
				x:Key="CustomButtonStyle1">
				<Setter
					Property="Background"
					Value="#7882D6" />
				<Setter
					Property="Foreground"
					Value="#FFFFFFFF" />
				<Setter
					Property="Width"
					Value="180" />
				<Setter
					Property="Height"
					Value="25" />
				<Setter
					Property="FontSize"
					Value="15" />
				<Setter
					Property="Template">
					<Setter.Value>
						<ControlTemplate
							TargetType="{x:Type Button}">
							<Border
								Name="border"
								Background="{TemplateBinding Background}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								CornerRadius="5">
								<ContentPresenter
									HorizontalAlignment="Center"
									VerticalAlignment="Center" />
							</Border>
							<ControlTemplate.Triggers>
								<Trigger
									Property="UIElement.IsMouseOver"
									Value="True">
									<Setter
										TargetName="border"
										Property="Background"
										Value="#8576FF" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style
				TargetType="{x:Type Button}"
				x:Key="CustomButtonStyle2">
				<Setter
					Property="Background"
					Value="#7882D6" />
				<Setter
					Property="Foreground"
					Value="#FFFFFFFF" />
				<Setter
					Property="Width"
					Value="120" />
				<Setter
					Property="Height"
					Value="25" />
				<Setter
					Property="FontSize"
					Value="15" />
				<Setter
					Property="Template">
					<Setter.Value>
						<ControlTemplate
							TargetType="{x:Type Button}">
							<Border
								Name="border"
								Background="{TemplateBinding Background}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								CornerRadius="5">
								<ContentPresenter
									HorizontalAlignment="Center"
									VerticalAlignment="Center" />
							</Border>
							<ControlTemplate.Triggers>
								<Trigger
									Property="UIElement.IsMouseOver"
									Value="True">
									<Setter
										TargetName="border"
										Property="Background"
										Value="#8576FF" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style
				TargetType="{x:Type Button}"
				x:Key="loginButtonStyle">
				<Setter
					Property="Background"
					Value="#7882D6" />
				<Setter
					Property="Foreground"
					Value="#FFFFFFFF" />
				<Setter
					Property="Width"
					Value="120" />
				<Setter
					Property="Height"
					Value="25" />
				<Setter
					Property="FontSize"
					Value="15" />
				<Setter
					Property="Template">
					<Setter.Value>
						<ControlTemplate
							TargetType="{x:Type Button}">
							<Border
								Name="border"
								Background="{TemplateBinding Background}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								CornerRadius="18">
								<ContentPresenter
									HorizontalAlignment="Center"
									VerticalAlignment="Center" />
							</Border>
							<ControlTemplate.Triggers>
								<Trigger
									Property="UIElement.IsMouseOver"
									Value="True">
									<Setter
										TargetName="border"
										Property="Background"
										Value="#8576FF" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style
				TargetType="{x:Type Button}"
				x:Key="reviewBtn1">
				<Setter
					Property="Background"
					Value="#40D457" />
				<Setter
					Property="Foreground"
					Value="#FFFFFFFF" />
				<Setter
					Property="Width"
					Value="180" />
				<Setter
					Property="Height"
					Value="25" />
				<Setter
					Property="FontSize"
					Value="15" />
				<Setter
					Property="Template">
					<Setter.Value>
						<ControlTemplate
							TargetType="{x:Type Button}">
							<Border
								Name="border"
								Background="{TemplateBinding Background}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								CornerRadius="5">
								<ContentPresenter
									HorizontalAlignment="Center"
									VerticalAlignment="Center" />
							</Border>
							<ControlTemplate.Triggers>
								<Trigger
									Property="UIElement.IsMouseOver"
									Value="True">
									<Setter
										TargetName="border"
										Property="Background"
										Value="#40D457" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style
				TargetType="{x:Type Button}"
				x:Key="reviewBtn">
				<Setter
					Property="Background"
					Value="#40D457" />
				<Setter
					Property="Foreground"
					Value="#FFFFFFFF" />
				<Setter
					Property="Width"
					Value="120" />
				<Setter
					Property="Height"
					Value="25" />
				<Setter
					Property="FontSize"
					Value="15" />
				<Setter
					Property="Template">
					<Setter.Value>
						<ControlTemplate
							TargetType="{x:Type Button}">
							<Border
								Name="border"
								Background="{TemplateBinding Background}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								CornerRadius="18">
								<ContentPresenter
									HorizontalAlignment="Center"
									VerticalAlignment="Center" />
							</Border>
							<ControlTemplate.Triggers>
								<Trigger
									Property="UIElement.IsMouseOver"
									Value="True">
									<Setter
										TargetName="border"
										Property="Background"
										Value="#A0ED6B" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style
				TargetType="{x:Type TabItem}"
				x:Key="TabItemButtonStyle">
				<Setter
					Property="Template">
					<Setter.Value>
						<ControlTemplate
							TargetType="{x:Type TabItem}">
							<Border
								Name="border"
								Background="#00FFFFFF"
								BorderBrush="#FFFFFFFF"
								BorderThickness="1.2">
								<Button
									Name="tabButton"
									Content="{TemplateBinding Header}"
									Background="#DCF2F1"
									BorderThickness="0"
									Padding="10,5"
									Foreground="#FF000000"
									FontSize="14"
									FontWeight="SemiBold"
									Margin="0"
									HorizontalContentAlignment="Center"
									VerticalContentAlignment="Center"
									Cursor="Hand">
									<FrameworkElement.Style>
										<Style
											TargetType="{x:Type Button}">
											<Setter
												Property="Background"
												Value="#FFD3D3D3" />
											<Setter
												Property="BorderThickness"
												Value="0" />
											<Setter
												Property="Padding"
												Value="10,5" />
											<Setter
												Property="Foreground"
												Value="#474F7A" />
											<Setter
												Property="FontSize"
												Value="14" />
											<Setter
												Property="FontWeight"
												Value="SemiBold" />
											<Setter
												Property="Margin"
												Value="0" />
											<Setter
												Property="HorizontalContentAlignment"
												Value="Center" />
											<Setter
												Property="VerticalContentAlignment"
												Value="Center" />
											<Style.Triggers>
												<Trigger
													Property="UIElement.IsMouseOver"
													Value="True">
													<Setter
														Property="Background"
														Value="#FF808080" />
												</Trigger>
												<Trigger
													Property="IsPressed"
													Value="True">
													<Setter
														Property="Background"
														Value="#FFA9A9A9" />
												</Trigger>
												<DataTrigger
													Value="True"
													Binding="{Binding IsSelected, RelativeSource={RelativeSource TemplatedParent}}">
													<Setter
														Property="Background"
														Value="#E5D4FF" />
												</DataTrigger>
											</Style.Triggers>
										</Style>
									</FrameworkElement.Style>
								</Button>
							</Border>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style
				TargetType="{x:Type TabItem}"
				x:Key="TabItemButtonStyle2">
				<Setter
					Property="Template">
					<Setter.Value>
						<ControlTemplate
							TargetType="{x:Type TabItem}">
							<Border
								Name="border"
								Background="#00FFFFFF"
								BorderBrush="#FF000000"
								BorderThickness="0.3">
								<Button
									Name="tabButton"
									Content="{TemplateBinding Header}"
									Background="#00FFFFFF"
									BorderThickness="0"
									Padding="10,5"
									Foreground="#FF000000"
									FontSize="14"
									FontWeight="SemiBold"
									Margin="0"
									HorizontalContentAlignment="Center"
									VerticalContentAlignment="Center"
									Cursor="Hand">
									<FrameworkElement.Style>
										<Style
											TargetType="{x:Type Button}">
											<Setter
												Property="Background"
												Value="#FFD3D3D3" />
											<Setter
												Property="BorderThickness"
												Value="0" />
											<Setter
												Property="Padding"
												Value="10,5" />
											<Setter
												Property="Foreground"
												Value="#5F5D9C" />
											<Setter
												Property="FontSize"
												Value="14" />
											<Setter
												Property="FontWeight"
												Value="SemiBold" />
											<Setter
												Property="Margin"
												Value="0" />
											<Setter
												Property="HorizontalContentAlignment"
												Value="Center" />
											<Setter
												Property="VerticalContentAlignment"
												Value="Center" />
											<Style.Triggers>
												<Trigger
													Property="UIElement.IsMouseOver"
													Value="True">
													<Setter
														Property="Background"
														Value="#FF808080" />
												</Trigger>
												<Trigger
													Property="IsPressed"
													Value="True">
													<Setter
														Property="Background"
														Value="#FFA9A9A9" />
												</Trigger>
												<DataTrigger
													Value="True"
													Binding="{Binding IsSelected, RelativeSource={RelativeSource TemplatedParent}}">
													<Setter
														Property="Background"
														Value="#E5D4FF" />
												</DataTrigger>
											</Style.Triggers>
										</Style>
									</FrameworkElement.Style>
								</Button>
							</Border>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style
				TargetType="{x:Type TabItem}"
				x:Key="MainTabStyle">
				<Setter
					Property="Template">
					<Setter.Value>
						<ControlTemplate
							TargetType="{x:Type TabItem}">
							<Border
								Name="Border"
								Background="#FFFFFFFF"
								BorderThickness="1.5"
								BorderBrush="#FF000000"
								CornerRadius="3"
								Margin="0 4 4 0"
								Padding="4">
								<ContentPresenter
									Name="ContentSite"
									VerticalAlignment="Center"
									HorizontalAlignment="Center"
									ContentSource="Header"
									Margin="10,2">
									<FrameworkElement.Style>
										<Style
											TargetType="{x:Type ContentPresenter}">
											<Setter
												Property="Foreground"
												Value="#FF000000" />
											<Style.Triggers>
												<DataTrigger
													Value="True"
													Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource TemplatedParent}}">
													<Setter
														Property="Foreground"
														Value="#FF000000" />
												</DataTrigger>
											</Style.Triggers>
										</Style>
									</FrameworkElement.Style>
								</ContentPresenter>
							</Border>
							<ControlTemplate.Triggers>
								<Trigger
									Property="TabItem.IsSelected"
									Value="True">
									<Setter
										TargetName="Border"
										Property="Background"
										Value="#D9EEEC" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style
				TargetType="{x:Type TabItem}"
				x:Key="SubTabStyle">
				<Setter
					Property="Template">
					<Setter.Value>
						<ControlTemplate
							TargetType="{x:Type TabItem}">
							<Border
								Name="Border"
								Background="#EBF0F6"
								BorderThickness="1.3"
								BorderBrush="#DCD6F7"
								CornerRadius="3"
								Margin="0 4 4 0"
								Padding="4">
								<ContentPresenter
									Name="ContentSite"
									VerticalAlignment="Center"
									HorizontalAlignment="Center"
									ContentSource="Header"
									Margin="10,2">
									<FrameworkElement.Style>
										<Style
											TargetType="{x:Type ContentPresenter}">
											<Setter
												Property="Foreground"
												Value="#FF000000" />
											<Style.Triggers>
												<DataTrigger
													Value="True"
													Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource TemplatedParent}}">
													<Setter
														Property="Foreground"
														Value="#FF000000" />
												</DataTrigger>
											</Style.Triggers>
										</Style>
									</FrameworkElement.Style>
								</ContentPresenter>
							</Border>
							<ControlTemplate.Triggers>
								<Trigger
									Property="TabItem.IsSelected"
									Value="True">
									<Setter
										TargetName="Border"
										Property="Background"
										Value="#D0D9FE" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style
				TargetType="{x:Type Paragraph}"
				x:Key="ParagraphStyle">
				<Setter
					Property="FontWeight"
					Value="Black" />
				<Setter
					Property="Background"
					Value="#FFB0E0E6" />
			</Style>
			<Style
				TargetType="{x:Type Paragraph}"
				x:Key="ParagraphStyle2">
				<Setter
					Property="FontWeight"
					Value="Black" />
				<Setter
					Property="Background"
					Value="#FFE0FFFF" />
			</Style>
			<Style
				TargetType="{x:Type Label}"
				x:Key="Cycle">
				<Setter
					Property="FontWeight"
					Value="Bold" />
				<Setter
					Property="HorizontalContentAlignment"
					Value="Center" />
				<Setter
					Property="FontSize"
					Value="16" />
			</Style>
			<Style
				TargetType="{x:Type GroupBox}"
				x:Key="upTrend">
				<Setter
					Property="BorderThickness"
					Value="1" />
				<Setter
					Property="Background"
					Value="#FFFFFFFF" />
				<Setter
					Property="Padding"
					Value="0 -2 0 0" />
			</Style>
			<Style
				TargetType="{x:Type GroupBox}"
				x:Key="downTrend">
				<Setter
					Property="BorderThickness"
					Value="1" />
				<Setter
					Property="Background"
					Value="#FFFFFFFF" />
				<Setter
					Property="Padding"
					Value="0 -2 0 0" />
			</Style>
			<Style
				TargetType="{x:Type RadioButton}"
				x:Key="CustomRadioButtonStyle">
				<Setter
					Property="Foreground"
					Value="#FF000000" />
				<Setter
					Property="FontSize"
					Value="14" />
				<Setter
					Property="FontWeight"
					Value="SemiBold" />
				<Setter
					Property="Padding"
					Value="5" />
				<Setter
					Property="Margin"
					Value="5" />
				<Setter
					Property="VerticalAlignment"
					Value="Center" />
				<Setter
					Property="HorizontalAlignment"
					Value="Left" />
				<Setter
					Property="Template">
					<Setter.Value>
						<ControlTemplate
							TargetType="{x:Type RadioButton}">
							<BulletDecorator
								Background="#00FFFFFF">
								<BulletDecorator.Bullet>
									<Grid
										Width="20"
										Height="20">
										<Ellipse
											Stroke="#FF808080"
											StrokeThickness="2" />
										<Ellipse
											Name="CheckedEllipse"
											Fill="#53448A"
											Width="12"
											Height="12"
											Visibility="Collapsed"
											VerticalAlignment="Center"
											HorizontalAlignment="Center" />
									</Grid>
								</BulletDecorator.Bullet>
								<ContentPresenter
									Margin="5,0,0,0"
									VerticalAlignment="Center" />
							</BulletDecorator>
							<ControlTemplate.Triggers>
								<Trigger
									Property="ToggleButton.IsChecked"
									Value="True">
									<Setter
										TargetName="CheckedEllipse"
										Property="Visibility"
										Value="Visible" />
								</Trigger>
								<Trigger
									Property="ToggleButton.IsChecked"
									Value="False">
									<Setter
										TargetName="CheckedEllipse"
										Property="Visibility"
										Value="Collapsed" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style
				TargetType="{x:Type ComboBox}"
				x:Key="SimpleComboBoxStyle">
				<Setter
					Property="Background"
					Value="#FF000000" />
				<Setter
					Property="BorderBrush"
					Value="#FF808080" />
				<Setter
					Property="BorderThickness"
					Value="1" />
				<Setter
					Property="Foreground"
					Value="#FF000000" />
				<Setter
					Property="Padding"
					Value="5" />
				<Setter
					Property="ItemContainerStyle">
					<Setter.Value>
						<Style
							TargetType="{x:Type ComboBoxItem}">
							<Setter
								Property="Foreground"
								Value="#FF000000" />
							<Setter
								Property="FontWeight"
								Value="Bold" />
						</Style>
					</Setter.Value>
				</Setter>
			</Style>
			<Style
				TargetType="{x:Type TextBox}"
				x:Key="CustomTextBoxStyle">
				<Setter
					Property="FontSize"
					Value="14" />
				<Setter
					Property="Height"
					Value="23" />
				<Setter
					Property="Width"
					Value="120" />
				<Setter
					Property="Background"
					Value="#EBEBEB" />
				<Setter
					Property="BorderThickness"
					Value="0" />
				<Setter
					Property="FrameworkElement.ToolTip"
					Value="Type script code to load" />
				<Setter
					Property="Padding"
					Value="5" />
			</Style>
			<Style
				TargetType="{x:Type Button}"
				x:Key="button">
				<Setter
					Property="Background"
					Value="#00FFFFFF" />
				<Setter
					Property="FrameworkElement.FocusVisualStyle"
					Value="{x:Null}" />
				<Setter
					Property="Margin"
					Value="8 0" />
				<Setter
					Property="Template">
					<Setter.Value>
						<ControlTemplate
							TargetType="{x:Type Button}">
							<Border
								Background="{TemplateBinding Background}"
								CornerRadius="30"
								BorderThickness="1"
								BorderBrush="#878787"
								Padding="15">
								<ContentPresenter
									HorizontalAlignment="Center"
									VerticalAlignment="Center" />
							</Border>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
				<Style.Triggers>
					<Trigger
						Property="UIElement.IsMouseOver"
						Value="True">
						<Setter
							Property="Background"
							Value="#d9d9d9" />
					</Trigger>
					<Trigger
						Property="UIElement.IsMouseCaptured"
						Value="True">
						<Setter
							Property="Background"
							Value="#c4c4c4" />
					</Trigger>
				</Style.Triggers>
			</Style>
			<Style
				TargetType="{x:Type TextBlock}"
				x:Key="TextHint">
				<Setter
					Property="FontSize"
					Value="14" />
				<Setter
					Property="Column"
					Value="1" />
				<Setter
					Property="Panel.ZIndex"
					Value="1" />
				<Setter
					Property="Margin"
					Value="10 0 0 0" />
				<Setter
					Property="Foreground"
					Value="#acb0af" />
			</Style>
			<Style
				TargetType="{x:Type TextBox}"
				x:Key="textBox">
				<Setter
					Property="FontSize"
					Value="16" />
				<Setter
					Property="Column"
					Value="1" />
				<Setter
					Property="Margin"
					Value="10 0 0 0" />
				<Setter
					Property="Foreground"
					Value="#424242" />
				<Setter
					Property="BorderBrush"
					Value="#00FFFFFF" />
				<Setter
					Property="BorderThickness"
					Value="1" />
				<Setter
					Property="FrameworkElement.FocusVisualStyle"
					Value="{x:Null}" />
				<Setter
					Property="Template">
					<Setter.Value>
						<ControlTemplate
							TargetType="{x:Type TextBox}">
							<Border
								Name="border"
								Background="{TemplateBinding Background}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}">
								<ScrollViewer
									Name="PART_ContentHost" />
							</Border>
							<ControlTemplate.Triggers>
								<Trigger
									Property="IsEnabled"
									Value="False">
									<Setter
										TargetName="border"
										Property="Background"
										Value="#FFF4F4F4" />
									<Setter
										TargetName="border"
										Property="BorderBrush"
										Value="#FFD9D9D9" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style
				TargetType="{x:Type Button}"
				x:Key="loginButton">
				<Setter
					Property="FontSize"
					Value="15" />
				<Setter
					Property="FontWeight"
					Value="Bold" />
				<Setter
					Property="Width"
					Value="200" />
				<Setter
					Property="Height"
					Value="50" />
				<Setter
					Property="Margin"
					Value="0 20 0 0" />
				<Setter
					Property="Background"
					Value="#6567EB" />
				<Setter
					Property="Foreground"
					Value="#FDFEFE" />
				<Setter
					Property="FrameworkElement.FocusVisualStyle"
					Value="{x:Null}" />
				<Setter
					Property="Template">
					<Setter.Value>
						<ControlTemplate
							TargetType="{x:Type Button}">
							<Border
								Background="{TemplateBinding Background}"
								CornerRadius="25"
								BorderThickness="1"
								BorderBrush="#FFF0F8FF"
								Padding="15">
								<ContentPresenter
									HorizontalAlignment="Center"
									VerticalAlignment="Center" />
							</Border>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
				<Style.Triggers>
					<Trigger
						Property="UIElement.IsMouseOver"
						Value="True">
						<Setter
							Property="Background"
							Value="#5456D6" />
						<Setter
							Property="Foreground"
							Value="#FFFFFFFF" />
					</Trigger>
					<Trigger
						Property="UIElement.IsMouseCaptured"
						Value="True">
						<Setter
							Property="Background"
							Value="#FFF0F8FF" />
						<Setter
							Property="Foreground"
							Value="#3839A6" />
					</Trigger>
				</Style.Triggers>
			</Style>
			<Style
				TargetType="{x:Type TextBox}"
				x:Key="test">
				<Setter
					Property="BorderBrush"
					Value="#FF808080" />
				<Setter
					Property="BorderThickness"
					Value="1" />
				<Setter
					Property="Margin"
					Value="70 0 0 0" />
				<Setter
					Property="Width"
					Value="200" />
				<Setter
					Property="FrameworkElement.FocusVisualStyle"
					Value="{x:Null}" />
				<Setter
					Property="Template">
					<Setter.Value>
						<ControlTemplate
							TargetType="{x:Type TextBox}">
							<Border
								Name="Border"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								Background="{TemplateBinding Background}">
								<ScrollViewer
									Name="PART_ContentHost" />
							</Border>
							<ControlTemplate.Triggers>
								<Trigger
									Property="UIElement.IsFocused"
									Value="True">
									<Setter
										TargetName="Border"
										Property="BorderBrush"
										Value="#FF808080" />
								</Trigger>
								<Trigger
									Property="IsEnabled"
									Value="False">
									<Setter
										TargetName="Border"
										Value="{DynamicResource SystemColors.ControlBrushKey}"
										Property="Background" />
									<Setter
										TargetName="Border"
										Value="{DynamicResource SystemColors.ControlDarkBrushKey}"
										Property="BorderBrush" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style
				TargetType="{x:Type CheckBox}"
				x:Key="CustomCheckBoxStyle">
				<Setter
					Property="Template">
					<Setter.Value>
						<ControlTemplate
							TargetType="{x:Type CheckBox}">
							<StackPanel
								Orientation="Horizontal">
								<Border
									Name="border"
									Width="20"
									Height="20"
									Background="{TemplateBinding Background}"
									BorderBrush="{TemplateBinding BorderBrush}"
									BorderThickness="2"
									CornerRadius="5">
									<Path
										Name="checkMark"
										Data="M0,4 L3,8 L10,0"
										Stroke="#00FFFFFF"
										StrokeThickness="2"
										StrokeStartLineCap="Round"
										StrokeEndLineCap="Round"
										HorizontalAlignment="Center"
										VerticalAlignment="Center" />
								</Border>
								<ContentPresenter
									Margin="5,0,0,0"
									VerticalAlignment="Center"
									Content="{TemplateBinding Content}"
									ContentTemplate="{TemplateBinding ContentTemplate}" />
							</StackPanel>
							<ControlTemplate.Triggers>
								<Trigger
									Property="ToggleButton.IsChecked"
									Value="True">
									<Setter
										TargetName="border"
										Property="Background"
										Value="#D7FFD8" />
									<Setter
										TargetName="checkMark"
										Property="Stroke"
										Value="#FF008000" />
								</Trigger>
								<Trigger
									Property="IsEnabled"
									Value="False">
									<Setter
										TargetName="border"
										Property="Background"
										Value="#FF808080" />
									<Setter
										TargetName="border"
										Property="BorderBrush"
										Value="#FFA9A9A9" />
									<Setter
										TargetName="checkMark"
										Property="Stroke"
										Value="#FFA9A9A9" />
								</Trigger>
								<Trigger
									Property="UIElement.IsMouseOver"
									Value="True">
									<Setter
										TargetName="border"
										Property="BorderBrush"
										Value="#FFD3D3D3" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
				<Setter
					Property="Background"
					Value="#FFFFFFFF" />
				<Setter
					Property="BorderBrush"
					Value="#FF808080" />
				<Setter
					Property="BorderThickness"
					Value="2" />
				<Setter
					Property="Margin"
					Value="5" />
			</Style>
			<Style
				TargetType="{x:Type Label}"
				x:Key="topLevels">
				<Setter
					Property="FontSize"
					Value="12" />
				<Setter
					Property="FontWeight"
					Value="Bold" />
				<Setter
					Property="HorizontalContentAlignment"
					Value="Center" />
				<Setter
					Property="VerticalContentAlignment"
					Value="Center" />
			</Style>
			<Style
				TargetType="{x:Type CheckBox}"
				x:Key="CBdisabledStyle">
				<Style.Triggers>
					<Trigger
						Property="IsEnabled"
						Value="False">
						<Setter
							Property="Foreground"
							Value="#FF808080" />
					</Trigger>
				</Style.Triggers>
			</Style>
			<Style
				TargetType="{x:Type Button}"
				x:Key="btn">
				<Setter
					Property="Height"
					Value="30" />
				<Setter
					Property="Width"
					Value="90" />
				<Setter
					Property="FontWeight"
					Value="Bold" />
				<Setter
					Property="FrameworkElement.Cursor"
					Value="Hand" />
			</Style>
			<Style
				TargetType="{x:Type TableCell}"
				x:Key="pairTradeTableCell">
				<Setter
					Property="TableCell.TextAlignment"
					Value="Center" />
				<Setter
					Property="TableCell.BorderBrush"
					Value="#FF000000" />
				<Setter
					Property="FontWeight"
					Value="Normal" />
				<Setter
					Property="TableCell.BorderThickness"
					Value="0, 0.5, 0.4, 0" />
			</Style>
			<Style
				TargetType="{x:Type ComboBox}"
				x:Key="pairTradeComboBox" />
			<Style
				TargetType="{x:Type GroupBox}"
				x:Key="pairTradeGroupBox" />
			<Style
				TargetType="{x:Type MenuItem}"
				x:Key="comoMenu">
				<Setter
					Property="Background"
					Value="#FFFFFFFF" />
				<Setter
					Property="Foreground"
					Value="#FF000000" />
				<Setter
					Property="BorderThickness"
					Value="0.5" />
				<Setter
					Property="BorderBrush"
					Value="#FF000000" />
				<Setter
					Property="Margin"
					Value="0,0,0,0" />
				<Setter
					Property="Height"
					Value="61.8" />
				<Setter
					Property="MenuItem.IsCheckable"
					Value="True" />
				<Setter
					Property="FontWeight"
					Value="SemiBold" />
				<Style.Triggers>
					<Trigger
						Property="MenuItem.IsChecked"
						Value="True">
						<Setter
							Property="Background"
							Value="#FFFFFFFF" />
						<Setter
							Property="Foreground"
							Value="#FF000000" />
					</Trigger>
					<Trigger
						Property="MenuItem.IsChecked"
						Value="False">
						<Setter
							Property="Background"
							Value="#FFFFFFFF" />
						<Setter
							Property="Foreground"
							Value="#FF000000" />
					</Trigger>
				</Style.Triggers>
			</Style>
			<Style
				TargetType="{x:Type GroupBox}"
				x:Key="commodity_GB">
				<Setter
					Property="Template">
					<Setter.Value>
						<ControlTemplate
							TargetType="{x:Type GroupBox}">
							<Grid>
								<Grid.RowDefinitions>
									<RowDefinition
										Height="36.5" />
									<RowDefinition
										Height="Auto" />
								</Grid.RowDefinitions>
								<Border
									Grid.Row="0"
									BorderBrush="#FF000000"
									BorderThickness="0,0.3,0,0"
									Background="#e0f7fa">
									<Label
										HorizontalAlignment="Left"
										Margin="45,0,0,0">
										<ContentPresenter
											Margin="0"
											ContentSource="Header"
											RecognizesAccessKey="True" />
									</Label>
								</Border>
								<Border
									Grid.Row="1"
									Background="#e0f7fa">
									<ContentPresenter
										Margin="0" />
								</Border>
							</Grid>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style
				TargetType="{x:Type Label}"
				x:Key="upTargetsValue_Label">
				<Setter
					Property="HorizontalContentAlignment"
					Value="Left" />
				<Setter
					Property="Margin"
					Value="45,0,0,0" />
				<Setter
					Property="Foreground"
					Value="#FF008000" />
			</Style>
			<Style
				TargetType="{x:Type Label}"
				x:Key="downTargetsValue_Label">
				<Setter
					Property="HorizontalContentAlignment"
					Value="Left" />
				<Setter
					Property="Margin"
					Value="45,0,0,0" />
				<Setter
					Property="Foreground"
					Value="#FFFF0000" />
			</Style>
		</ResourceDictionary>
	</Application.Resources>
</Application>
